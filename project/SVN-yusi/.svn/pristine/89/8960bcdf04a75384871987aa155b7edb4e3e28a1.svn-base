<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context" 
  xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
  xmlns:jee="http://www.springframework.org/schema/jee" 
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:aop="http://www.springframework.org/schema/aop" 
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:util="http://www.springframework.org/schema/util"
  xmlns:jpa="http://www.springframework.org/schema/data/jpa"
  xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
    
  
  <!-- handlerMappering -->
  <mvc:annotation-driven/>
  <mvc:interceptors>
    <bean id="webContentInterceptor" 
          class="org.springframework.web.servlet.mvc.WebContentInterceptor">
        <property name="cacheSeconds" value="0"/>
        <property name="useExpiresHeader" value="true"/>
        <property name="useCacheControlHeader" value="true"/>
        <property name="useCacheControlNoStore" value="true"/>
    </bean>
  </mvc:interceptors>


  <mvc:resources mapping="*.html" location="/,/pro_html/" />
  <mvc:resources mapping="*.js" location="/" />
  <mvc:resources mapping="*.json" location="/" />
  <mvc:resources mapping="*.css" location="/" /> 
  
  
   <!-- 扫描注解Bean -->
   <context:component-scan base-package="ekuter.mvc">
       <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
   </context:component-scan>

   <!-- 开启AOP监听 只对当前配置文件有效 -->
   <aop:aspectj-autoproxy expose-proxy="true"/>
  
  <!-- 扫描Controller和Service组件对象  -->
  <context:component-scan base-package="ekuter.mvc.controller"></context:component-scan>
  <context:component-scan base-package="mybatisPro.mybatisService"></context:component-scan>

  
  <!-- 返回的视图 -->
  <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
   <property name="prefix" value="/WEB-INF/jsp/"/>
   <property name="suffix" value=".jsp"/>
  </bean>
  
  <!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
<!--   <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <property name="defaultEncoding" value="UTF-8"/>
    指定所上传文件的总大小不能超过15M。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和
    <property name="maxUploadSize" value="15728640"/>
  </bean> -->
  
  <!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->
  <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
<!--   <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
    <property name="exceptionMappings">
      <props>
        遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面
        <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">fileError/errorFileupload</prop>
      </props>
    </property>
  </bean> -->
  
    <!-- 添加自定义异常统一处理机制 -->
  <bean id="exceptionHandler1" class="ekuter.mvc.exception.CustomExceptionResolver">
    <!-- 
    <property name="exceptionMappings">  
        <props>  
            <prop key="com.ekuter.web.exception.BusinessException">exception/error-business</prop>  
            <prop key="com.ekuter.web.exception.SystemException">exception/error-parameter</prop>  
            <prop key="java.lang.Exception">exception/error</prop>  
        </props>  
    </property>
     -->
  </bean>
  
  <!-- 发送邮件 -->
  <!-- 读取配置文件里面的邮箱信息 -->
<!--   <util:properties id="email" location="classpath:userDefine.properties"></util:properties>
  <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
     <property name="host" value="#{email.host}" />
     <property name="port" value="#{email.post}" />
     <property name="username" value="#{email.userName}" />
     <property name="password" value="#{email.password}" />
     <property name="javaMailProperties">
           <props>
              <prop key="mail.transport.protocol">smtp</prop>
              <prop key="mail.smtp.auth">true</prop>
              <prop key="mail.smtp.starttls.enable">true</prop>
          </props>
    </property>
  </bean> -->
  
<!--  此处注册了一个@CurrentUser参数解析器。如之前的IndexController，从request获取shiro sysUser拦截器放入的当前登录User对象。 -->
  <mvc:annotation-driven>
      <mvc:argument-resolvers>
          <bean class="ekuter.mvc.constants.CurrentUserMethodArgumentResolver"/>
      </mvc:argument-resolvers>
  </mvc:annotation-driven>
  
  <bean class="ekuter.mvc.util.SpringUtils"/>
  
  <import resource="spring-kaptcha.xml"/>
  <import resource="spring-shiro-config.xml"/>
  <import resource="spring-mvc-shiro.xml"/>
</beans>