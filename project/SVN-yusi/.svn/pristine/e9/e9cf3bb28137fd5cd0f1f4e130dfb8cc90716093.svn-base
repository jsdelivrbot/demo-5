package mybatisPro.mybatisService;

import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;

import ekuter.mvc.constants.Constants;
import ekuter.mvc.exception.BusinessException;
import mybatisPro.dataBase.SqlSessionHander;
import mybatisPro.myBatisDao.WaterLevelMapper;
import mybatisPro.mybatisService.impl.WaterLevelService;

/**
 * 水位数据查询业务层实现
 * @author si.yu
 * @date 2017/08/08
 * @version 1.0
 * */
@Service
public class WaterLevelServiceImpl implements WaterLevelService{

	private static final Logger logger = LoggerFactory.getLogger(WaterLevelServiceImpl.class);
	
	/**
	 * 根据时间段查询水位测站数据
	 * @param begin_time
	 * @param end_time
	 * @param sta_id
	 * */
	@Override
	public Map<String, Object> getWaterLevelInfo(String begin_time, String end_time, Long sta_id) {
		try {
			return SqlSessionHander.SqlExecute(sqlsession->{
				WaterLevelMapper waterLevelMapper = sqlsession.getMapper(WaterLevelMapper.class);
				Map<String,Object> waterLevelInfo = 
						waterLevelMapper.getWaterLevelInfo(begin_time, end_time, sta_id);
				return waterLevelInfo;
			});
		} catch (Exception e) {
			logger.info(e.getMessage());
			throw new BusinessException(Constants.EXCEPTION_MAP.get("EX_WATERLEVEL_1"));
		}
	}

	
	/**
	 *根据时间段查询河道水位测站数据 
	 * @param begin_time
	 * @param end_time
	 * @param sta_id
	 **/
	@Override
	public Map<String, Object> getSoilWaterLevelInfo(String begin_time, String end_time, Long sta_id) {
		try {
			return SqlSessionHander.SqlExecute(sqlsession->{
				WaterLevelMapper waterLevelMapper = sqlsession.getMapper(WaterLevelMapper.class);
				Map<String,Object> soilWaterLevelInfo = 
						waterLevelMapper.getSoilWaterLevelInfo(begin_time, end_time, sta_id);
				return soilWaterLevelInfo;
			});
		} catch (Exception e) {
			logger.info(e.getMessage());
			throw new BusinessException(Constants.EXCEPTION_MAP.get("EX_WATERLEVEL_2"));
		}
	}

	
}
