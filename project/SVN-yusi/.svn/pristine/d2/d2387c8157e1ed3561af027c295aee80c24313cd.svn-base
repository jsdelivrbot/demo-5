package ekuter.mvc.util;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import mybatisPro.dataBase.SqlSessionHander;
import mybatisPro.myBatisDao.RainfallStatisticsMapper;
import mybatisPro.myBatisDao.StationStatusMapper;

/**
 * 雨量统计定时工具
 *
 * @date 2017年8月11日
 *
 * @version 1.0
 */
@Component("rainfallTimer")
public class RainfallTimerUtil {

	private Logger logger = LoggerFactory.getLogger(RainfallTimerUtil.class);

	/**
	 * 每小时雨量统计
	 */
	public void rainStatByHours() {
		System.out.println("小时统计开始");
		try {
			SqlSessionHander.SqlExecute(sqlsession -> {
				RainfallStatisticsMapper rain_mapper = sqlsession.getMapper(RainfallStatisticsMapper.class);
				rain_mapper.statisticsByHour();
				sqlsession.commit();
				return null;

			});
		} catch (Exception e) {
			logger.info(e.getMessage());
		}
		System.out.println("小时统计结束");
	}

	/**
	 * 每天雨量统计
	 */
	public void rainStatByDays() {
		System.out.println("天统计开始");
		try {
			SqlSessionHander.SqlExecute(sqlsession -> {
				RainfallStatisticsMapper rain_mapper = sqlsession.getMapper(RainfallStatisticsMapper.class);
				rain_mapper.statisticsByDays();
				sqlsession.commit();
				return null;

			});
		} catch (Exception e) {
			logger.info(e.getMessage());
		}
		System.out.println("天统计结束");
	}

	/**
	 * 每个月雨量统计
	 */
	public void rainStatByMonths() {
		System.out.println("月统计开始");
		try {
			SqlSessionHander.SqlExecute(sqlsession -> {
				RainfallStatisticsMapper rain_mapper = sqlsession.getMapper(RainfallStatisticsMapper.class);
				rain_mapper.statisticsByMonths();
				sqlsession.commit();
				return null;

			});
		} catch (Exception e) {
			logger.info(e.getMessage());
		}
		System.out.println("月统计结束");
	}

	/**
	 * 测站状态数据整编
	 */
	public void stationStatus() {
		try {
			SqlSessionHander.SqlExecute(sqlsession -> {
				StationStatusMapper station_mapper = sqlsession.getMapper(StationStatusMapper.class);
				station_mapper.dateStatistics();
				sqlsession.commit();
				return null;
			});
		} catch (Exception e) {
			logger.info(e.getMessage());
		}
	}

}
